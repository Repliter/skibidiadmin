"-- Create a ScreenGui\r\nlocal screenGui = Instance.new(\"ScreenGui\")\r\nscreenGui.Name = \"MyScreenGui\"\r\nscreenGui.Parent = game.CoreGui\r\n\r\n-- Create a Frame to hold the TextBox and Title\r\nlocal frame = Instance.new(\"Frame\")\r\nframe.Size = UDim2.new(0, 300, 0, 150) -- Increased height to 150\r\nframe.Position = UDim2.new(0.5, -150, 0.5, -75)\r\nframe.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)\r\nframe.BorderSizePixel = 0\r\nframe.Parent = screenGui\r\n\r\n-- Create a Title label\r\nlocal titleLabel = Instance.new(\"TextLabel\")\r\ntitleLabel.Size = UDim2.new(1, -20, 0, 50) -- Set size for title\r\ntitleLabel.Position = UDim2.new(0, 10, 0, 10)\r\ntitleLabel.BackgroundTransparency = 1\r\ntitleLabel.Text = \"Skibidi Admin\"\r\ntitleLabel.TextColor3 = Color3.new(1, 1, 1)\r\ntitleLabel.TextSize = 20\r\ntitleLabel.Font = Enum.Font.SourceSans\r\ntitleLabel.Parent = frame\r\n\r\n-- Create a TextBox\r\nlocal textBox = Instance.new(\"TextBox\")\r\ntextBox.Size = UDim2.new(1, -20, 0, 50)\r\ntextBox.Position = UDim2.new(0, 10, 0, 70) -- Adjusted position to fit below title\r\ntextBox.BackgroundColor3 = Color3.new(1, 1, 1)\r\ntextBox.Text = \"\"\r\ntextBox.TextColor3 = Color3.new(0, 0, 0)\r\ntextBox.TextSize = 14\r\ntextBox.ClearTextOnFocus = false\r\ntextBox.Parent = frame\r\n\r\n-- Make the Frame draggable\r\nlocal dragging = false\r\nlocal dragInput\r\nlocal dragStart\r\nlocal startPos\r\n\r\nlocal function update(input)\r\n    local delta = input.Position - dragStart\r\n    frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)\r\nend\r\n\r\nframe.InputBegan:Connect(function(input)\r\n    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then\r\n        dragging = true\r\n        dragStart = input.Position\r\n        startPos = frame.Position\r\n        \r\n        input.Changed:Connect(function()\r\n            if input.UserInputState == Enum.UserInputState.End then\r\n                dragging = false\r\n            end\r\n        end)\r\n    end\r\nend)\r\n\r\nframe.InputChanged:Connect(function(input)\r\n    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then\r\n        dragInput = input\r\n    end\r\nend)\r\n\r\ngame:GetService(\"UserInputService\").InputChanged:Connect(function(input)\r\n    if dragging and input == dragInput then\r\n        update(input)\r\n    end\r\nend)\r\n\r\n-- Detect keypress to focus the TextBox\r\ngame:GetService(\"UserInputService\").InputBegan:Connect(function(input)\r\n    if input.KeyCode == Enum.KeyCode.Semicolon then\r\n        textBox:CaptureFocus()\r\n    end\r\nend)\r\n\r\n-- Command registration system\r\nlocal commands = {}\r\n\r\nfunction addCommand(name, description, func)\r\n    commands[name] = {description = description, func = func}\r\nend\r\n\r\n-- Example command\r\naddCommand(\"ws\", \"Change walk speed\", function(args)\r\n    local speed = tonumber(args[2]) or 16\r\n    local player = game.Players.LocalPlayer\r\n    local char = player.Character or workspace:FindFirstChild(player.Name)\r\n    local humanoid = char and char:FindFirstChildWhichIsA(\"Humanoid\")\r\n\r\n    if humanoid then\r\n        humanoid.WalkSpeed = speed\r\n    end\r\nend)\r\n\r\n-- Create an autofill frame\r\nlocal autofillFrame = Instance.new(\"Frame\")\r\nautofillFrame.Size = UDim2.new(1, 0, 0, 100)\r\nautofillFrame.Position = UDim2.new(0, 0, 1, 0)\r\nautofillFrame.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)\r\nautofillFrame.Visible = false\r\nautofillFrame.Parent = textBox\r\n\r\nlocal autofillText = Instance.new(\"TextLabel\")\r\nautofillText.Size = UDim2.new(1, -10, 1, -10)\r\nautofillText.Position = UDim2.new(0, 5, 0, 5)\r\nautofillText.BackgroundTransparency = 1\r\nautofillText.TextColor3 = Color3.new(1, 1, 1)\r\nautofillText.TextWrapped = true\r\nautofillText.Text = \"\"\r\nautofillText.Parent = autofillFrame\r\n\r\ntextBox:GetPropertyChangedSignal(\"Text\"):Connect(function()\r\n    local text = textBox.Text:lower()\r\n    if text == \"\" then\r\n        autofillFrame.Visible = false\r\n        return\r\n    end\r\n\r\n    local suggestions = {}\r\n    for name, _ in pairs(commands) do\r\n        if string.find(name:lower(), text) then\r\n            table.insert(suggestions, name)\r\n        end\r\n    end\r\n\r\n    if #suggestions > 0 then\r\n        autofillFrame.Visible = true\r\n        autofillText.Text = table.concat(suggestions, \"\\n\")\r\n    else\r\n        autofillFrame.Visible = false\r\n    end\r\nend)\r\n\r\n-- Create a command list frame\r\nlocal commandListFrame = Instance.new(\"Frame\")\r\ncommandListFrame.Size = UDim2.new(0, 300, 0, 400)\r\ncommandListFrame.Position = UDim2.new(0, frame.AbsolutePosition.X - 310, 0.5, -200) -- Positioned to the left of the main frame\r\ncommandListFrame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)\r\ncommandListFrame.BorderSizePixel = 0\r\ncommandListFrame.Visible = false\r\ncommandListFrame.Parent = screenGui\r\n\r\n-- Create a close button for commandListFrame\r\nlocal closeButton = Instance.new(\"TextButton\")\r\ncloseButton.Size = UDim2.new(0, 30, 0, 30)\r\ncloseButton.Position = UDim2.new(1, -40, 0, 10)\r\ncloseButton.BackgroundColor3 = Color3.new(1, 0, 0)\r\ncloseButton.TextColor3 = Color3.new(1, 1, 1)\r\ncloseButton.Text = \"X\"\r\ncloseButton.Parent = commandListFrame\r\n\r\ncloseButton.MouseButton1Click:Connect(function()\r\n    commandListFrame.Visible = false\r\nend)\r\n\r\n-- Add a scrolling feature to the command list\r\nlocal scrollingFrame = Instance.new(\"ScrollingFrame\")\r\nscrollingFrame.Size = UDim2.new(1, 0, 1, -40) -- Adjust to fit below the close button\r\nscrollingFrame.Position = UDim2.new(0, 0, 0, 40)\r\nscrollingFrame.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)\r\nscrollingFrame.BorderSizePixel = 0\r\nscrollingFrame.CanvasSize = UDim2.new(0, 0, 1, 0)\r\nscrollingFrame.Parent = commandListFrame\r\n\r\nlocal commandListText = Instance.new(\"TextLabel\")\r\ncommandListText.Size = UDim2.new(1, -10, 1, -10)\r\ncommandListText.Position = UDim2.new(0, 5, 0, 5)\r\ncommandListText.BackgroundTransparency = 1\r\ncommandListText.TextColor3 = Color3.new(1, 1, 1)\r\ncommandListText.TextWrapped = true\r\ncommandListText.Text = \"\"\r\ncommandListText.Parent = scrollingFrame\r\n\r\n-- Handle TextBox input\r\ntextBox.FocusLost:Connect(function(enterPressed)\r\n    if enterPressed then\r\n        local text = textBox.Text\r\n        local args = string.split(text, \" \")\r\n\r\n        if args[1] == \"cmds\" then\r\n            local list = \"\"\r\n            for name, cmd in pairs(commands) do\r\n                list = list .. name .. \": \" .. cmd.description .. \"\\n\"\r\n            end\r\n            commandListText.Text = list\r\n            commandListFrame.Visible = true\r\n            scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, commandListText.TextBounds.Y) -- Update canvas size\r\n        else\r\n            commandListFrame.Visible = false\r\n\r\n            local cmd = commands[args[1]]\r\n            if cmd then\r\n                cmd.func(args)\r\n            end\r\n        end\r\n\r\n        textBox.Text = \"\"\r\n    end\r\nend)\r\n\r\n-- Teleport command with partial username matching\r\naddCommand(\"to\", \"Teleport to a player\", function(args)\r\n    local partialName = args[2]\r\n    if not partialName then\r\n        return\r\n    end\r\n\r\n    local player = game.Players.LocalPlayer\r\n    local char = player.Character or workspace:FindFirstChild(player.Name)\r\n    local rootPart = char and char:FindFirstChild(\"HumanoidRootPart\")\r\n\r\n    if rootPart then\r\n        local targetPlayer = nil\r\n        partialName = partialName:lower()\r\n\r\n        for _, p in pairs(game.Players:GetPlayers()) do\r\n            if p.Name:lower():sub(1, #partialName) == partialName then\r\n                targetPlayer = p\r\n                break\r\n            end\r\n        end\r\n\r\n        if targetPlayer then\r\n            local targetChar = targetPlayer.Character or workspace:FindFirstChild(targetPlayer.Name)\r\n            local targetRootPart = targetChar and targetChar:FindFirstChild(\"HumanoidRootPart\")\r\n\r\n            if targetRootPart then\r\n                rootPart.CFrame = targetRootPart.CFrame\r\n            end\r\n        end\r\n    end\r\nend)\r\n\r\n-- Fly command\r\nlocal flying = false\r\nlocal flySpeed = 50\r\nlocal upKey = Enum.KeyCode.Q\r\nlocal downKey = Enum.KeyCode.E\r\nlocal forwardKey = Enum.KeyCode.W\r\nlocal backwardKey = Enum.KeyCode.S\r\nlocal leftKey = Enum.KeyCode.A\r\nlocal rightKey = Enum.KeyCode.D\r\nlocal flyConnection\r\n\r\nlocal function startFlying()\r\n    flying = true\r\n\r\n    local player = game.Players.LocalPlayer\r\n    local char = player.Character or workspace:FindFirstChild(player.Name)\r\n    local rootPart = char and char:FindFirstChild(\"HumanoidRootPart\")\r\n\r\n    if rootPart then\r\n        -- Enable flying\r\n        local bodyGyro = Instance.new(\"BodyGyro\")\r\n        bodyGyro.P = 9e4\r\n        bodyGyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)\r\n        bodyGyro.cframe = rootPart.CFrame\r\n        bodyGyro.Parent = rootPart\r\n\r\n        local bodyVelocity = Instance.new(\"BodyVelocity\")\r\n        bodyVelocity.velocity = Vector3.new(0, 0, 0)\r\n        bodyVelocity.maxForce = Vector3.new(9e9, 9e9, 9e9)\r\n        bodyVelocity.Parent = rootPart\r\n\r\n        flyConnection = game:GetService(\"RunService\").RenderStepped:Connect(function()\r\n            local newVelocity = Vector3.new(0, 0, 0)\r\n            \r\n            if game:GetService(\"UserInputService\"):IsKeyDown(upKey) then\r\n                newVelocity = newVelocity + Vector3.new(0, flySpeed, 0)\r\n            end\r\n            if game:GetService(\"UserInputService\"):IsKeyDown(downKey) then\r\n                newVelocity = newVelocity + Vector3.new(0, -flySpeed, 0)\r\n            end\r\n            if game:GetService(\"UserInputService\"):IsKeyDown(forwardKey) then\r\n                newVelocity = newVelocity + (workspace.CurrentCamera.CFrame.LookVector * flySpeed)\r\n            end\r\n            if game:GetService(\"UserInputService\"):IsKeyDown(backwardKey) then\r\n                newVelocity = newVelocity - (workspace.CurrentCamera.CFrame.LookVector * flySpeed)\r\n            end\r\n            if game:GetService(\"UserInputService\"):IsKeyDown(leftKey) then\r\n                newVelocity = newVelocity - (workspace.CurrentCamera.CFrame.RightVector * flySpeed)\r\n            end\r\n            if game:GetService(\"UserInputService\"):IsKeyDown(rightKey) then\r\n                newVelocity = newVelocity + (workspace.CurrentCamera.CFrame.RightVector * flySpeed)\r\n            end\r\n            \r\n            bodyGyro.cframe = workspace.CurrentCamera.CFrame\r\n            bodyVelocity.velocity = newVelocity\r\n        end)\r\n    end\r\nend\r\n\r\nlocal function stopFlying()\r\n    flying = false\r\n\r\n    local player = game.Players.LocalPlayer\r\n    local char = player.Character or workspace:FindFirstChild(player.Name)\r\n    local rootPart = char and char:FindFirstChild(\"HumanoidRootPart\")\r\n\r\n    if rootPart then\r\n        -- Disable flying\r\n        if rootPart:FindFirstChild(\"BodyGyro\") then\r\n            rootPart.BodyGyro:Destroy()\r\n        end\r\n        if rootPart:FindFirstChild(\"BodyVelocity\") then\r\n            rootPart.BodyVelocity:Destroy()\r\n        end\r\n        if flyConnection then\r\n            flyConnection:Disconnect()\r\n        end\r\n    end\r\nend\r\n\r\naddCommand(\"fly\", \"Toggle fly mode\", function()\r\n    if flying then\r\n        stopFlying()\r\n    else\r\n        startFlying()\r\n    end\r\nend)\r\n\r\naddCommand(\"unfly\", \"Stop flying\", function()\r\n    if flying then\r\n        stopFlying()\r\n    end\r\nend)\r\n\r\n-- Noclip command\r\nlocal noclipping = false\r\nlocal noclipConnection\r\n\r\nlocal function startNoclip()\r\n    noclipping = true\r\n\r\n    local player = game.Players.LocalPlayer\r\n    local char = player.Character or workspace:FindFirstChild(player.Name)\r\n\r\n    if char then\r\n        noclipConnection = game:GetService(\"RunService\").Stepped:Connect(function()\r\n            for _, part in pairs(char:GetChildren()) do\r\n                if part:IsA(\"BasePart\") then\r\n                    part.CanCollide = false\r\n                end\r\n            end\r\n        end)\r\n    end\r\nend\r\n\r\nlocal function stopNoclip()\r\n    noclipping = false\r\n\r\n    if noclipConnection then\r\n        noclipConnection:Disconnect()\r\n    end\r\n\r\n    local player = game.Players.LocalPlayer\r\n    local char = player.Character or workspace:FindFirstChild(player.Name)\r\n\r\n    if char then\r\n        for _, part in pairs(char:GetChildren()) do\r\n            if part:IsA(\"BasePart\") then\r\n                part.CanCollide = true\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\naddCommand(\"noclip\", \"Enable noclip mode\", function()\r\n    if not noclipping then\r\n        startNoclip()\r\n    end\r\nend)\r\n\r\naddCommand(\"clip\", \"Disable noclip mode\", function()\r\n    if noclipping then\r\n        stopNoclip()\r\n    end\r\nend)\r\n\r\nlocal espEnabled = false\r\nlocal espConnections = {}\r\nlocal playerEspGuis = {}\r\n\r\nlocal function createEsp(player)\r\n    local function setupEsp()\r\n        local char = player.Character\r\n        if not char then return end\r\n\r\n        local rootPart = char:FindFirstChild(\"HumanoidRootPart\")\r\n        local humanoid = char:FindFirstChildOfClass(\"Humanoid\")\r\n\r\n        if not rootPart or not humanoid then return end\r\n\r\n        -- Create BillboardGui for the text display\r\n        local billboardGui = Instance.new(\"BillboardGui\")\r\n        billboardGui.Name = \"EspGui\"\r\n        billboardGui.Adornee = rootPart\r\n        billboardGui.Size = UDim2.new(4, 0, 5, 0)\r\n        billboardGui.AlwaysOnTop = true\r\n        billboardGui.Parent = game.CoreGui\r\n\r\n        -- Create frame for the ESP text\r\n        local frame = Instance.new(\"Frame\")\r\n        frame.Size = UDim2.new(1, 0, 1, 0)\r\n        frame.BackgroundTransparency = 1\r\n        frame.BorderSizePixel = 0\r\n        frame.Parent = billboardGui\r\n\r\n        -- Create TextLabel for username and health\r\n        local textLabel = Instance.new(\"TextLabel\")\r\n        textLabel.Size = UDim2.new(2, 0, 0.2, 0)\r\n        textLabel.Position = UDim2.new(0, 0, -0.2, 0)\r\n        textLabel.BackgroundTransparency = 1\r\n        textLabel.TextColor3 = Color3.new(1, 1, 1)\r\n        textLabel.TextStrokeTransparency = 0.5\r\n        textLabel.TextScaled = true\r\n        textLabel.Text = player.Name .. \" (\" .. math.floor(humanoid.Health) .. \")\"\r\n        textLabel.Parent = billboardGui\r\n\r\n        -- Update the health display\r\n        local healthChangedConnection = humanoid.HealthChanged:Connect(function()\r\n            textLabel.Text = player.Name .. \" (\" .. math.floor(humanoid.Health) .. \")\"\r\n        end)\r\n\r\n        table.insert(espConnections, healthChangedConnection)\r\n        playerEspGuis[player] = {billboardGui, healthChangedConnection}\r\n\r\n        -- Attach boxes to each limb\r\n        local limbs = {\"Head\", \"Left Arm\", \"Right Arm\", \"Left Leg\", \"Right Leg\", \"Torso\"}\r\n        for _, limbName in pairs(limbs) do\r\n            local limb = char:FindFirstChild(limbName)\r\n            if limb then\r\n                local limbBox = Instance.new(\"BoxHandleAdornment\")\r\n                limbBox.Adornee = limb\r\n                limbBox.Size = limb.Size\r\n                limbBox.Color3 = player.Team and player.Team.TeamColor.Color or Color3.new(1, 1, 1)\r\n                limbBox.Transparency = 0.5\r\n                limbBox.ZIndex = 1\r\n                limbBox.AlwaysOnTop = true\r\n                limbBox.Parent = game.CoreGui\r\n                table.insert(playerEspGuis[player], limbBox)\r\n            end\r\n        end\r\n\r\n        -- Update the text size based on distance\r\n        local distanceUpdateConnection = game:GetService(\"RunService\").RenderStepped:Connect(function()\r\n            local localPlayer = game.Players.LocalPlayer\r\n            local localChar = localPlayer.Character\r\n            local localRootPart = localChar and localChar:FindFirstChild(\"HumanoidRootPart\")\r\n\r\n            if localRootPart then\r\n                local distance = (localRootPart.Position - rootPart.Position).Magnitude\r\n                textLabel.TextSize = 18 * (distance / 50) -- Scale the text size based on distance\r\n            end\r\n        end)\r\n\r\n        table.insert(espConnections, distanceUpdateConnection)\r\n        table.insert(playerEspGuis[player], distanceUpdateConnection)\r\n    end\r\n\r\n    if player.Character then\r\n        setupEsp()\r\n    end\r\n\r\n    table.insert(espConnections, player.CharacterAdded:Connect(setupEsp))\r\nend\r\n\r\nlocal function removeEsp(player)\r\n    local espData = playerEspGuis[player]\r\n    if espData then\r\n        espData[1]:Destroy()  -- Remove the BillboardGui\r\n        espData[2]:Disconnect()  -- Disconnect the healthChangedConnection\r\n        for i = 3, #espData do  -- Remove the limb boxes and distance update connection\r\n            if typeof(espData[i]) == \"Instance\" then\r\n                espData[i]:Destroy()\r\n            else\r\n                espData[i]:Disconnect()\r\n            end\r\n        end\r\n        playerEspGuis[player] = nil\r\n    end\r\nend\r\n\r\nlocal function onCharacterAdded(character)\r\n    local player = game.Players:GetPlayerFromCharacter(character)\r\n    if player and espEnabled then\r\n        createEsp(player)\r\n    end\r\nend\r\n\r\naddCommand(\"esp\", \"Enable ESP\", function()\r\n    if espEnabled then return end\r\n    espEnabled = true\r\n\r\n    for _, player in pairs(game.Players:GetPlayers()) do\r\n        if player ~= game.Players.LocalPlayer then\r\n            createEsp(player)\r\n        end\r\n        table.insert(espConnections, player.CharacterAdded:Connect(function(char)\r\n            onCharacterAdded(char)\r\n        end))\r\n        table.insert(espConnections, player.CharacterRemoving:Connect(function()\r\n            removeEsp(player)\r\n        end))\r\n    end\r\n\r\n    table.insert(espConnections, game.Players.PlayerAdded:Connect(function(player)\r\n        if espEnabled then\r\n            table.insert(espConnections, player.CharacterAdded:Connect(onCharacterAdded))\r\n        end\r\n    end))\r\n\r\n    table.insert(espConnections, game.Players.PlayerRemoving:Connect(function(player)\r\n        removeEsp(player)\r\n    end))\r\nend)\r\n\r\naddCommand(\"unesp\", \"Disable ESP\", function()\r\n    if not espEnabled then return end\r\n    espEnabled = false\r\n\r\n    for player, _ in pairs(playerEspGuis) do\r\n        removeEsp(player)\r\n    end\r\n\r\n    for _, connection in pairs(espConnections) do\r\n        connection:Disconnect()\r\n    end\r\n\r\n    espConnections = {}\r\nend)\r\n\r\n\r\n-- Command to close or kill the GUI\r\naddCommand(\"fuckoff\", \"Closes the GUI and kills it\", function()\r\n    -- Clean up all ESP elements if enabled\r\n    if espEnabled then\r\n        for player, _ in pairs(playerEspGuis) do\r\n            removeEsp(player)\r\n        end\r\n\r\n        for _, connection in pairs(espConnections) do\r\n            connection:Disconnect()\r\n        end\r\n\r\n        espConnections = {}\r\n        espEnabled = false\r\n    end\r\n\r\n    -- Remove the main GUI\r\n    if screenGui then\r\n        screenGui:Destroy()\r\n    end\r\n\r\n    -- Disconnect all connections to avoid memory leaks\r\n    for _, connection in pairs(commandConnections) do\r\n        connection:Disconnect()\r\n    end\r\n\r\n    -- Clear other related variables if any\r\n    commands = {}\r\n    playerEspGuis = {}\r\n    print(\"GUI closed and script killed.\")\r\nend)\r\n\r\n-- Fling command\r\nlocal flinging = false\r\nlocal flingConnection\r\n\r\naddCommand(\"fling\", \"Toggle fling mode\", function()\r\n    local player = game.Players.LocalPlayer\r\n    local char = player.Character or workspace:FindFirstChild(player.Name)\r\n    local rootPart = char and char:FindFirstChild(\"HumanoidRootPart\")\r\n\r\n    if not char or not rootPart then return end\r\n\r\n    -- Set custom physical properties\r\n    for _, child in pairs(char:GetDescendants()) do\r\n        if child:IsA(\"BasePart\") then\r\n            child.CustomPhysicalProperties = PhysicalProperties.new(math.huge, 0.3, 0.5)\r\n        end\r\n    end\r\n\r\n    -- Enable noclip\r\n    commands[\"noclip\"].func()\r\n\r\n    -- Wait briefly to ensure noclip is enabled\r\n    wait(0.1)\r\n\r\n    -- Create BodyAngularVelocity to spin the character\r\n    local bambam = Instance.new(\"BodyAngularVelocity\")\r\n    bambam.Name = \"FlingBambam\"\r\n    bambam.Parent = rootPart\r\n    bambam.AngularVelocity = Vector3.new(0, 99999, 0)\r\n    bambam.MaxTorque = Vector3.new(0, math.huge, 0)\r\n    bambam.P = math.huge\r\n\r\n    -- Create BodyGyro to keep the character upright\r\n    local gyro = Instance.new(\"BodyGyro\")\r\n    gyro.Parent = rootPart\r\n    gyro.MaxTorque = Vector3.new(400000, 0, 400000)\r\n    gyro.P = 3000\r\n    gyro.CFrame = CFrame.new(rootPart.Position, rootPart.Position + Vector3.new(0, 1, 0))\r\n\r\n    -- Set all BaseParts to be non-collidable and massless\r\n    for _, v in pairs(char:GetChildren()) do\r\n        if v:IsA(\"BasePart\") then\r\n            v.CanCollide = false\r\n            v.Massless = true\r\n            v.Velocity = Vector3.new(0, 0, 0)\r\n        end\r\n    end\r\n\r\n    flinging = true\r\n\r\n    -- Function to handle the character's death\r\n    local function flingDiedF()\r\n        commands[\"unfling\"].func()\r\n    end\r\n\r\n    -- Connect the character's death event to the function\r\n    local flingDied = char:FindFirstChildOfClass('Humanoid').Died:Connect(flingDiedF)\r\n\r\n    -- Repeatedly adjust AngularVelocity to maintain the flinging effect\r\n    flingConnection = game:GetService(\"RunService\").RenderStepped:Connect(function()\r\n        if flinging then\r\n            bambam.AngularVelocity = Vector3.new(0, 99999, 0)\r\n            gyro.CFrame = CFrame.new(rootPart.Position, rootPart.Position + Vector3.new(0, 1, 0))\r\n        end\r\n    end)\r\nend)\r\n\r\n-- Unfling command\r\naddCommand(\"unfling\", \"Stop flinging\", function()\r\n    flinging = false\r\n\r\n    -- Temporarily enable noclip\r\n    commands[\"noclip\"].func()\r\n\r\n    -- Wait briefly to ensure noclip is enabled\r\n    wait(0.1)\r\n\r\n    local player = game.Players.LocalPlayer\r\n    local char = player.Character or workspace:FindFirstChild(player.Name)\r\n    local rootPart = char and char:FindFirstChild(\"HumanoidRootPart\")\r\n\r\n    if not char or not rootPart then return end\r\n\r\n    -- Create BodyAngularVelocity to spin in the opposite direction\r\n    local counterSpin = Instance.new(\"BodyAngularVelocity\")\r\n    counterSpin.Name = \"CounterSpin\"\r\n    counterSpin.Parent = rootPart\r\n    counterSpin.AngularVelocity = Vector3.new(0, -99999, 0) -- Opposite direction to counteract the spin\r\n    counterSpin.MaxTorque = Vector3.new(0, math.huge, 0)\r\n    counterSpin.P = math.huge\r\n\r\n    -- Create BodyGyro to stabilize the character\r\n    local stabilizer = Instance.new(\"BodyGyro\")\r\n    stabilizer.Parent = rootPart\r\n    stabilizer.MaxTorque = Vector3.new(400000, 400000, 400000)\r\n    stabilizer.P = 3000\r\n    stabilizer.CFrame = rootPart.CFrame\r\n\r\n    -- Remove BodyAngularVelocity and BodyGyro\r\n    for i, v in pairs(rootPart:GetChildren()) do\r\n        if v.ClassName == 'BodyAngularVelocity' and v.Name ~= 'CounterSpin' then\r\n            v:Destroy()\r\n        end\r\n    end\r\n\r\n    -- Reset custom physical properties\r\n    for _, child in pairs(char:GetDescendants()) do\r\n        if child:IsA(\"BasePart\") then\r\n            child.CustomPhysicalProperties = PhysicalProperties.new(0.7, 0.3, 0.5)\r\n        end\r\n    end\r\n\r\n    -- Re-enable collisions for all BaseParts\r\n    for _, v in pairs(char:GetChildren()) do\r\n        if v:IsA(\"BasePart\") then\r\n            v.CanCollide = true\r\n            v.Massless = false\r\n        end\r\n    end\r\n\r\n    -- Wait longer before removing the stabilizer and disabling noclip\r\n    wait(0.5) -- Shorter wait time to stop the counter-spin faster\r\n    counterSpin:Destroy()\r\n    stabilizer:Destroy()\r\n    commands[\"clip\"].func()\r\nend)\r\n\r\n\r\n"